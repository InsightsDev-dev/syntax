
%token a:" an a symbol" = if ($c == 'a') {$+; return a;};
%token b:"a b symbol" [B] = if ($c == 'b') {$+; return b;};
%token c:"a c symbol" [C] {
  if ($c == 'c') {
    $+; 
    return c;
  }
}

%lexer [B] = if ($c == 'a') {$+; $l = DEFAULT_LEXER_MODE; return a;};
%lexer [C] = if ($c == 'a') {$+; $l = DEFAULT_LEXER_MODE; return a;};

%lexer {
  if ($c == 'b') {
    $l = B_LEXER_MODE;
    $+;
    return b;
  }
  
  if ($c == 'c') {
    $l = C_LEXER_MODE;
    $+;
    return c;
  }
}

%%

A : b
  | c
  ;
%%

int charNum = 0;
char * expression = "(1 + 3) *4 / 5 + -20";

char StxNextChar()
{
    if (charNum < strlen(expression)) {
      printf("Char %c\n", expression[charNum]);
      return expression[charNum++];
    }
    return EOS;
}


int StxError(int state, int token, int top, char * message)
{
    printf("An error occurred in state %d with token %d on the position %d\n", state, token, top);
    printf("%s\n", message);
#ifdef DEBUG
    StxPrintStack();
#endif
    return ERROR_RE_ATTEMPT;
}

 
}