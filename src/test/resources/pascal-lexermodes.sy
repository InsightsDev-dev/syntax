%{
{Program that gets compiled and executed by free pascal}
PROGRAM lexermode;
USES sysutils;
{$I $$b.inc}
VAR
    current : String;
    
%}

%union
  s:STRING;
%

%token <s> a:" an a symbol" = 
if   $c = 'a'
then begin
     $v.s := $c;
     $+; 
     $x(a);
     end;
%

%token <s> b:"a b symbol" [B] = 
if   $c = 'b'
then begin
     $v.s := $c;
     $+; 
     $x(b);
     end;
%
       
%token <s> c:"a c symbol" [C] =
if   $c = 'c'
then begin
     $v.s := $c;
     $+; 
     $x(c);
     end;
%

%lexer [B] = 
if   $c = 'a'
then begin
     $v.s := $c;
     $+; 
     $l := DEFAULT_LEXER_MODE; 
     $x(a);
     end;
%

%lexer [C] = 
if   $c = 'a'
then begin
     $v.s := $c;
     $+; 
     $l := DEFAULT_LEXER_MODE; 
     $x(a);
     end;
%

%lexer =
if   $c = 'b'
then begin
     $v.s := $c;
     $l := B_LEXER_MODE;
     $+;
     $x(b);
     end;
  
if   $c = 'c'
then begin
     $v.s := $c;
     $l := C_LEXER_MODE;
     $+;
     $x(c);
     end;
%

%type <s> A;
%type <s> B;

%start A

%%

A : A B   = $$ := $A + $B;%
  | B     = $$ := $B;%
  ;
  
B : a
  | b
  | c
  ;
  
%%

VAR
    charNum : INTEGER = 1;

CONST
    expression = 'bacaab';

FUNCTION StxNextChar: CHAR;
BEGIN
    IF   charNum <= LENGTH(expression) 
    THEN BEGIN
         StxNextChar := expression[charNum];
         charNum := charNum + 1;
         END
    ELSE StxNextChar := CHR(EOS);
END;

PROCEDURE StxUngetChar(c:char);
BEGIN
    charNum := charNum - 1;
END;

FUNCTION StxError(StxState:INTEGER; StxSym: INTEGER; pStxStack: INTEGER; aMessage:STRING):INTEGER;
BEGIN
    writeln('An error occurred in state ', StxState, ' with token ', StxSym, ' on the position ', pStxStack);
    writeln(aMessage);
{$IFDEF DEBUG}
    StxPrintStack();
{$ENDIF}
    StxError := ERROR_RE_ATTEMPT;
END;

FUNCTION StxToString(value:TSTACK):STRING;
BEGIN
  StxToString := value.s;
END;

BEGIN
  if   StxParse
  then begin
       writeln (StxToString(StxGetResult));
       end;
END.
