%{

char *currentString = NULL;
  
%}

%union {
  char c;
  String s;
    
  public StackElement () {
    this.c = 0;
    this.s = "";
  }
    
  public String toString() {
    return "c='" + c + "'" + ",s=\"" + s + "\"";
  }
  
  public void setChar(char c) {
    this.c = c;
  }

}
%token A /a(.|.|b)c/
%token B /(a)/ {
  currentString = "";
  return $t;
}

%token C /.?x+y*(a|b)*/
%token D /_?[A-Za-z][A-Za-z0-9-]*/
%token E /[]]/
%token F /[-]/
%token G /[]-]/

%start S;

%name S : "anything";
%%

S    : A
     | B
     | C
     | D
     | E
     | F
     ;

%%

int charNum = 0;
char * expression = "(1 + 3) *4 / 5 + -20";

char StxNextChar()
{
    if (charNum < strlen(expression)) {
      printf("Char %c\n", expression[charNum]);
      return expression[charNum++];
    }
    return EOS;
}


int StxError(int state, int token, int top, char * message)
{
    printf("An error occurred in state %d with token %d on the position %d\n", state, token, top);
    printf("%s\n", message);
#ifdef DEBUG
    StxPrintStack();
#endif
    return ERROR_RE_ATTEMPT;
}

 
