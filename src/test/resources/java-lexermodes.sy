%{
public class LexerMode {
%}

%struct {
  String s;
}

%token aa:"an a symbol" = if ($c == 'a') {$v.s = "" + $c; $+; return aa;};
%token bb:"a b symbol" [B] = if ($c == 'b') {$v.s = "" + $c; $+; return bb;};
%token cc:"a c symbol" [C] {
  if ($c == 'c') {
    $v.s = "" + $c; 
    $+; 
    return cc;
  };
}

%lexer [B] = if ($c == 'a') {$v.s = "" + $c; $+; $l = DEFAULT_LEXER_MODE; return aa;};
%lexer [C] = if ($c == 'a') {$v.s = "" + $c; $+; $l = DEFAULT_LEXER_MODE; return aa;};

%lexer {
  if ($c == 'b') {
    $v.s = "" + $c; 
    $l = B_LEXER_MODE;
    $+;
    return bb;
  }
  
  if ($c == 'c') {
    $v.s = "" + $c; 
    $l = C_LEXER_MODE;
    $+;
    return cc;
  }
}

%type <s> A;
%type <s> B;

%start A

%%

A : A B  = $$ = $A + $B;
  | B    = $$ = $B;
  ;

B : aa
  | bb
  | cc
  ;

%%

  int charNum = 0;
  String expression = "bacaab";
  private char getNextChar(boolean initialize) {
    if (initialize) {
      charNum = 0;
    }
    if (charNum < expression.length()) {
      return expression.charAt(charNum++);
    }
    return EOS;
  }

  private void ungetChar(char c) {
    charNum --;
    if (charNum < 0 || expression.charAt(charNum) != c) {
      throw new RuntimeException("Error putting a character back");
    }
  }

  private int parserError(int state, int token, int top, String message) {
    System.out.println("An error occurred in state " + state + " with token " + token + " on the position " + top);
    System.out.println(message);
    parserPrintStack();
    return ERROR_RE_ATTEMPT;
  }
  
  public String getOutput() {
    return getResult().s;
  }
  
}